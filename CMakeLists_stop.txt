cmake_minimum_required(VERSION 3.0.0)
project(rendering VERSION 0.1.0)

#include(CTest)
#enable_testing()

include_directories("${CMAKE_SOURCE_DIR}\\include")

set(CMAKE_PREFIX_PATH "${CMAKE_SOURCE_DIR}")

set(CMAKE_CXX_STANDARD_LIBRARIES "-static-libgcc -static-libstdc++ -lwsock32 -lws2_32 ${CMAKE_CXX_STANDARD_LIBRARIES}")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Bstatic,--whole-archive -lwinpthread -Wl,--no-whole-archive")

set(HEADER_FILES 
include/headers/shader.h
include/headers/data.h
include/headers/func.h
include/glad/glad.h
)

set(SOURCE 
src/funcs/shader.cpp
src/funcs/func.cpp
src/funcs/data.cpp
src/main.cpp
)

#EXPERIMENT!!!!!

add_library(shader_class STATIC
    src/funcs/shader.cpp
    include/headers/shader.h
)

set(LIBRARY 
OpenGL::GL
glad
glfw
#shader_class
)

target_link_libraries(shader_class OpenGL::GL
glad
glfw)

find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)

add_library(glad STATIC src/glad.c)

add_executable(rendering ${SOURCE} ${HEADER_FILES})


target_link_libraries(rendering "${LIBRARY}")
target_include_directories(rendering PUBLIC "${CMAKE_SOURCE_DIR}\\include") #UNSURE WHETHER NEEDED


#set(CPACK_PROJECT_NAME ${PROJECT_NAME})
#set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
#include(CPack)
